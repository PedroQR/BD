create database turmaA1Procedure;

use turmaA1procedure;

create table sacola(
tipo_bola varchar(10),
quantidade int
);

insert into sacola (tipo_bola, quantidade) values ('Preta', 2);
insert into sacola (tipo_bola, quantidade) values ('branca', 2);
insert into sacola (tipo_bola, quantidade) values ('amarela', 2);
insert into sacola (tipo_bola, quantidade) values ('vermelha', 2);
insert into sacola (tipo_bola, quantidade) values ('verde', 2);

select * from sacola; 

DELIMITER $$
CREATE PROCEDURE RETORNA_COR_BOLA()
BEGIN 
SELECT * FROM SACOLA;
END


$$ DELIMITER ;

CALL RETORNA_COR_BOLA;

DROP PROCEDURE RETORNA_COR_BOLA;

DELIMITER $$
CREATE PROCEDURE RETORNA_COR_BOLA_COM_PARAMETRO()
BEGIN
	SELECT* FROM SACOLA;
END 
$$ DELIMITER 
CREATE PROCEDURE RETORNA_COR_BOLA_COM_PARAMETRO(IN COR_BOLA VARCHAR(10))
BEGIN
	SELECT* FROM SACOLA WHERE TIPO_BOLA = COR_BOLA;
END 
$$ DELIMITER 
DROP PROCEDURE RETORNA_COR_BOLA_COM_PARAMETRO;

CALL RETORNA_COR_BOLA_COM_PARAMETRO
$$ DELIMITER 

DELIMITER $$

CREATE PROCEDURE RETORNA_COR_BOLA_COM_DOIS_PARAMETRO(
IN COR_BOLA1 VARCHAR(10),
IN COR_BOLA2 VARCHAR(10)
)
BEGIN 
SELECT * FROM SACOLA WHERE TIPO_BOLA IN (COR_BOLA_1, COR_BOLA_2);
END 
$$ DELIMITER ;

CALL RETORNA_COR_BOLA_COM_DOIS_PARAMETRO('PRETA', 'AMARELA');


USE SAKILA ;

SELECT 
FILM.TITLE
FROM 
	FILM
	INNER JOIN FILM_CATEGORY USING (FILM_ID)
	INNER JOIN CATEGORY USING (CATEGORY_ID)
WHERE 
CATEGORY.NAME = 'ACTION';

DELIMITER $$
CREATE PROCEDURE RETORNA_FILME_ACAO()
BEGIN
	SELECT 
FILM.TITLE
FROM 
	FILM
	INNER JOIN FILM_CATEGORY USING (FILM_ID)
	INNER JOIN CATEGORY USING (CATEGORY_ID)
WHERE 
CATEGORY.NAME = 'ACTION';
END 
$$ DELIMITER 

CALL RETORNA_FILME_ACAO;;=

DELIMITER $$
CREATE PROCEDURE RETORNA_FILME_TERROR(IN CATEGORIA VARCHAR(25))
BEGIN
	SELECT 
FILM.TITLE
FROM 
	FILM
	INNER JOIN FILM_CATEGORY USING (FILM_ID)
	INNER JOIN CATEGORY USING (CATEGORY_ID)
WHERE 
CATEGORY.NAME = 'HORROR';
END 
$$ DELIMITER ;

CALL RETORNA_FILME_TERROR;

-- PARAMETRO DE SAIDA
DELIMITER $$
cALL RETORNA_FILME_CATEGORIA('ACTION');

PROCEDURE COM PARAMETRO DE SAIDA 
$$ DELIMITER ;

DELIMITER $$

CREATE procedure RETORNA_QUANTIDADE_FILMES_POR_CATEGORIA(
IN CATEGORIA VARCHAR(25),
OUT QUANTIDADE int
)
BEGIN 
SELECT 
COUNT(FILM.TITLE) INTO QUANTIDADE 
FROM 
FILM 
INNER JOIN FILM_CATEGORY USING (FILM_ID) 
INNER JOIN CATEGORY USING (CATEGORY_ID)
WHERE 
CATEGORY.NAME = CATEGORIA;
END
$$ DELIMITER 

SET @VALOR =0;
CALL RETORNA_QUANTIDADE_FILMES_POR_CATEGORIA ('ACTION', @VALOR);
select @VALOR;

DROP PROCEDURE RETORNA_QUANTIDADE_FILMES_POR_CATEGORIA;


USE CLASSICMODELS;
-- CRIAR UMA PROCEDURE QUE RETORNA OS VALORES VENDIDOS PELO ESCRITORIO PARIS 
-- EM 2005. VOCÊ TERÁ DOIS PARAMENTROS DE ENTRADA E UM DE SAIDA.
-- O BANCO DE DADOS SERÁ O CLASSICMODELS;
USE CLASSICMODELS;



DELIMITER $$ 
CREATE PROCEDURE RETORNA_VALOR_VENDIDO_ESCRITORIO (

IN ANO INT,
IN ESCRITORIO VARCHAR(25),
OUT VALOR_VENDIDO DECIMAL(10,2)

)
begin 
select
 SUM(PAYMENTS.AMOUNT) VALOR INTO VALOR_VENDIDO
FROM 
CUSTOMERS 
INNER JOIN PAYMENTS USING (CUSTOMERNUMBER)
INNER JOIN EMPLOYEES ON (SALESREPEMPLOYEENUMBER = EMPLOYEENUMBER)
INNER JOIN OFFICES USING (OFFICECODE)
WHERE 
YEAR (PAYMENTDATE) = ANO
AND OFFICES.CITY = ESCRITORIO;
END
$$ DELIMITER ;

DROP procedure RETORNA_VALOR_VENDIDO_ESCRITORIO;
SET @VALOR =0.0;
CALL RETORNA_VALOR_VENDIDO_ESCRITORIO (2005, 'PARIS', @VALOR);
SELECT @VALOR;


